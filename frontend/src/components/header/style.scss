@import "../../mixins.scss"; // Import your mixins if needed

.header {
  position: fixed;
  transform: translateY(0);
  width: 100%;
  height: 60px;
  z-index: 2;
  display: flex;
  align-items: center;
  transition: all ease 0.5s;
  background: rgba(0, 0, 0, 0.25);
  backdrop-filter: blur(3.5px);

  &.show {
    background-color: var(--black3); // Use your color variable
  }

  &.hide {
    transform: translateY(-60px);
  }

  .contentWrapper {
    display: flex;
    align-items: center;
    justify-content: space-between;
    width: 100%; // Ensure the wrapper takes full width
  }

  .logo {
    cursor: pointer;

    img {
      height: 35px; // Adjust logo height
      transition: transform 0.3s; // Smooth transition for hover effect
      &:hover {
        transform: scale(1.1); // Slightly enlarge on hover
      }
    }
  }

  .menuItems {
    list-style-type: none;
    display: none; // Hidden by default, shown in larger screens
    align-items: center;

    @include md {
      display: flex; // Flexbox for larger screens
    }

    .menuItem {
      height: 60px;
      display: flex;
      align-items: center;
      margin: 0 15px;
      color: white;
      font-weight: 500;
      position: relative;
      cursor: pointer;

      svg {
        font-size: 18px;
      }

      &:hover {
        color: var(--pink); // Change color on hover
      }
    }
  }

  .mobileMenuItems {
    display: flex;
    align-items: center;
    gap: 20px;

    @include md {
      display: none; // Hide in larger screens
    }

    svg {
      font-size: 18px;
      color: white;
    }
  }

  &.mobileView {
    background: var(--black3);

    .menuItems {
      display: flex;
      position: absolute;
      top: 60px; // Positioning under the header
      left: 0;
      background: var(--black3);
      flex-direction: column;
      width: 100%;
      padding: 20px 0;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      animation: mobileMenu 0.3s ease forwards;

      .menuItem {
        font-size: 20px;
        width: 100%;
        height: auto;
        padding: 15px 20px;
        margin: 0;
        display: flex;
        flex-direction: column;
        align-items: flex-start;

        &:last-child {
          display: none; // Hide last menu item in mobile view
        }
      }
    }
  }

  .searchBar {
    width: 100%;
    height: 60px;
    background-color: white;
    position: absolute;
    top: 60px; // Positioning under the header
    animation: mobileMenu 0.3s ease forwards;

    .searchInput {
      display: flex;
      align-items: center;
      height: 40px;
      margin-top: 10px;
      width: 100%;

      svg {
        font-size: 20px;
        flex-shrink: 0;
        margin-left: 10px;
        cursor: pointer;
      }

      input {
        width: 100%;
        height: 50px;
        background-color: white;
        outline: 0;
        border: 0;
        border-radius: 30px 0 0 30px;
        padding: 0 15px;
        font-size: 14px;

        @include md {
          height: 60px; // Adjust height for larger screens
          font-size: 20px; // Larger font size
          padding: 0 30px; // Increase padding
        }
      }
    }
  }
}

// Animation for mobile menu appearance
@keyframes mobileMenu {
  0% {
    transform: translateY(-130%);
  }
  100% {
    transform: translateY(0);
  }
}

// Auth Modal styling
.authModal {
  position: absolute;
  top: 60px; // Adjust this value to place the modal just below the header
  right: 20px; // Align to the right if needed (adjust to match button alignment)
  background: #ffffff;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
  z-index: 100;
  width: 90%;
  max-width: 400px;
}


.authModal .switchButton {
  background-color: #007bff;
  color: #fff;
  width: 100%; // Make the switch button take full width
  margin-top: 20px;
}

.authModal .closeButton {
  background-color: #ccc;
  color: #333;
  position: absolute;
  top: 1rem;
  right: 1rem;
  padding: 0.5rem;
  border-radius: 50%; // Optional: to make it round
  font-size: 1.2rem;
  cursor: pointer;
}
